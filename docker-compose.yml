version: '3.8'

services:
  # Go Service (Service 1)
  service1:
    build:
      context: ./service1
      dockerfile: Dockerfile
    container_name: service1
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8001/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Python Flask Service (Service 2)
  service2:
    build:
      context: ./service2
      dockerfile: Dockerfile
    container_name: service2
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "3000:80"
    depends_on:
      service1:
        condition: service_healthy
      service2:
        condition: service_healthy
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - nginx-logs:/var/log/nginx

networks:
  microservices:
    driver: bridge
    name: microservices-network

volumes:
  nginx-logs:
    name: nginx-logs